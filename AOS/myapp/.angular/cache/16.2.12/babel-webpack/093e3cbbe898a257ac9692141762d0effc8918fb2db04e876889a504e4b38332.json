{"ast":null,"code":"// import { Component, OnInit } from '@angular/core';\n// import { AppService } from 'src/app/app.service';\n// import { ActivatedRoute } from '@angular/router';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-upadte-flock',\n//   templateUrl: 'upadte-flock.component.html',\n//   styleUrls: ['upadte-flock.component.css']\n// })\n// export class UpadteFlockComponent implements OnInit {\n//   responseData: any[] = []; // Assuming this is where you store the fetched flock data\n//   flockData: any = {}; // Object to hold flock data for form\n//   constructor(private appService: AppService,public route:ActivatedRoute) {}\n//   // ngOnInit(): void {\n//   //   this.fetchFlockData();\n//   // }\n//   ngOnInit() {\n//     this.route.params.subscribe(params => {\n//       const  id = params['id']; // Access the 'name' route parameter\n//       console.log(id); // Here you have the received name\n// //   const name =\"c983990258\"\n//       this.fetchFlockData(id);\n//    });\n//   }\n//   fetchFlockData(name :string): void {\n//     let obj = name\n//     this.appService.postRequest(\"listbyflock\",obj).subscribe((result: any) => {\n//       this.responseData = result;\n//     });\n//   }\n//   onSubmit(): void {\n//     // Implement logic to submit form data\n//     // For example, you can send a POST request to update or create a new flock\n//   }\n//   editFlock(item: any): void {\n//     // Populate the form fields with the selected flock's data\n//     this.flockData = {\n//       flockName: item.flockName,\n//       breedName: item.breedName,\n//       startDate: item.startDate,\n//       startAge: item.startAge,\n//       openingBirds: item.openingBirds,\n//       shedNumber: item.shedNumber,\n//       // Add more properties if needed\n//     };\n//   }\n//   toggleFileDetails(event: Event): void {\n//     const container = event.currentTarget as HTMLElement;\n//     container.classList.toggle('expanded');\n//   }\n// }\nimport { Component } from '@angular/core';\nexport let UpadteFlockComponent = class UpadteFlockComponent {\n  constructor(appService, route, router, toastr) {\n    this.appService = appService;\n    this.route = route;\n    this.router = router;\n    this.toastr = toastr;\n    this.responseData = []; // Assuming this is where you store the fetched flock data\n    this.flockData = {}; // Object to hold flock data for form\n    this.id = \"\";\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      console.log(\"fetch call=\", this.id); // Access the 'id' route parameter\n      this.fetchFlockData(this.id);\n    });\n  }\n  fetchFlockData(id) {\n    this.appService.postRequest(\"listbyflock\", {\n      id: id\n    }).subscribe(result => {\n      console.log(\"result\", result);\n      this.responseData = result;\n      // Assign fetched data to flockData object for binding to form fields\n      this.flockData = {\n        active: result.active,\n        id: result.id,\n        flockName: result.flockName,\n        breedName: result.breedName,\n        startDate: result.startDate,\n        startAge: result.startAge,\n        openingBirds: result.openingBirds,\n        shedNumber: result.shedNumber\n      };\n    });\n  }\n  onSubmit() {\n    let obj = {\n      \"id\": this.id,\n      \"flockName\": this.flockData.flockName,\n      \"breedName\": this.flockData.breedName,\n      \"startDate\": this.flockData.startDate,\n      \"Active\": this.flockData.active,\n      \"startAge\": parseInt(this.flockData.startAge),\n      \"openingBirds\": parseInt(this.flockData.openingBirds),\n      \"shedNumber\": this.flockData.shedNumber.toString()\n    };\n    console.log(obj);\n    this.appService.postRequest(\"updateflock\", obj).subscribe(result => {\n      this.showSuccess('Flock created successfully!');\n      this.resetForm();\n      this.router.navigate(['listflock']);\n    }, error => {\n      if (error.error && error.error.errors) {\n        for (const field in error.error.errors) {\n          this.showError(`Error in ${field}: ${error.error.errors[field]}`);\n        }\n      } else {\n        this.showError('Error occurred while creating flock!');\n      }\n    });\n  }\n  resetForm() {\n    this.flockData = {};\n  }\n  showSuccess(msg) {\n    if (msg) {\n      this.toastr.success(msg);\n    }\n  }\n  showError(msg) {\n    if (msg) {\n      this.toastr.error(msg);\n    }\n  }\n  toggleFileDetails(event) {\n    const container = event.currentTarget;\n    container.classList.toggle('expanded');\n  }\n};\nUpadteFlockComponent = __decorate([Component({\n  selector: 'app-upadte-flock',\n  templateUrl: 'upadte-flock.component.html',\n  styleUrls: ['upadte-flock.component.css']\n})], UpadteFlockComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}